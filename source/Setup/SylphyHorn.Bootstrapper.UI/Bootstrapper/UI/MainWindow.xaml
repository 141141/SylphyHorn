<metro:MetroWindow x:Class="SylphyHorn.Bootstrapper.UI.MainWindow"
				   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
				   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
				   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				   xmlns:livet="http://schemas.livet-mvvm.net/2011/wpf"
				   xmlns:metro="http://schemes.grabacr.net/winfx/2014/controls"
				   xmlns:metro2="http://schemes.grabacr.net/winfx/2015/personal/controls"
				   xmlns:p="clr-namespace:SylphyHorn.Properties"
				   xmlns:b="clr-namespace:SylphyHorn.Bootstrapper.UI.Bindings"
				   xmlns:controls="clr-namespace:SylphyHorn.Bootstrapper.UI.Controls"
				   mc:Ignorable="d"
				   d:DataContext="{d:DesignInstance b:MainWindowViewModel}"
				   Title="{Binding Title}"
				   Width="480"
				   Height="240"
				   Background="{DynamicResource ThemeBrushKey}"
				   Foreground="{DynamicResource ActiveForegroundBrushKey}"
				   FontFamily="Segoe UI, Meiryo UI"
				   SnapsToDevicePixels="True"
				   UseLayoutRounding="True"
				   metro:ThemeHelper.HasThemeResources="True">

	<i:Interaction.Behaviors>
		<livet:WindowCloseCancelBehavior CloseCanceledCallbackMethodTarget="{Binding}"
										 CloseCanceledCallbackMethodName="CloseCanceledCallback"
										 CanClose="{Binding CanClose}" />
	</i:Interaction.Behaviors>

	<i:Interaction.Triggers>
		<i:EventTrigger EventName="ContentRendered">
			<livet:LivetCallMethodAction MethodTarget="{Binding}"
										 MethodName="Initialize" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closed">
			<livet:DataContextDisposeAction />
		</i:EventTrigger>

		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.WindowAction">
			<livet:WindowInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="False" />
		</livet:InteractionMessageTrigger>
		<livet:InteractionMessageTrigger Messenger="{Binding Messenger}"
										 MessageKey="Window.Transition.Child">
			<livet:TransitionInteractionMessageAction InvokeActionOnlyWhenWindowIsActive="False"
													  IsOwned="True" />
		</livet:InteractionMessageTrigger>
	</i:Interaction.Triggers>

	<metro:MetroWindow.Resources>
		<Storyboard x:Key="ContentSlideInAnimationKey">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentControl"
										   Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
				<EasingDoubleKeyFrame KeyTime="0"
									  Value="20" />
				<EasingDoubleKeyFrame KeyTime="0:0:2"
									  Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<QuarticEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
			<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
										   Storyboard.TargetName="ContentControl">
				<EasingDoubleKeyFrame KeyTime="0"
									  Value="0" />
				<EasingDoubleKeyFrame KeyTime="0:0:0.5"
									  Value="1" />
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
	</metro:MetroWindow.Resources>

	<DockPanel>
		<!-- #region Caption area -->
		<DockPanel DockPanel.Dock="Top"
				   metro:MetroWindow.IsCaptionBar="True">
			<Border DockPanel.Dock="Bottom"
					Height="8" />

			<StackPanel DockPanel.Dock="Right"
						Orientation="Horizontal"
						HorizontalAlignment="Right"
						VerticalAlignment="Top"
						WindowChrome.IsHitTestVisibleInChrome="True">
				<metro:SystemButtons />
			</StackPanel>
			<TextBlock Text="{Binding Title}"
					   FontFamily="Segoe UI Light, Meiryo UI"
					   FontSize="18"
					   Margin="12,8" />
		</DockPanel>
		<!-- #endregion -->

		<ContentControl x:Name="ContentControl"
						x:FieldModifier="private"
						Content="{Binding Content}"
						Margin="12,0,12,12"
						controls:ContentControlHelper.ContentChangedAnimation="{DynamicResource ContentSlideInAnimationKey}">
			<ContentControl.Resources>
				<Style x:Key="NormalStyleKey"
					   TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource ForegroundBrushKey}" />
					<Setter Property="FontSize"
							Value="14" />
				</Style>
				<Style x:Key="HeaderStyleKey"
					   TargetType="{x:Type TextBlock}">
					<Setter Property="Foreground"
							Value="{DynamicResource AccentBrushKey}" />
					<Setter Property="FontFamily"
							Value="Segoe UI Light, Meiryo UI" />
					<Setter Property="FontSize"
							Value="20" />
				</Style>
				<Style x:Key="SeparatorStyleKey"
					   TargetType="{x:Type Border}">
					<Setter Property="Height"
							Value="1" />
					<Setter Property="Background"
							Value="{DynamicResource AccentBrushKey}" />
					<Setter Property="Margin"
							Value="0,4,0,12" />
				</Style>
				<Style x:Key="ButtonStyleKey"
					   TargetType="{x:Type Button}">
					<Setter Property="Padding"
							Value="24,8" />
					<Setter Property="MinWidth"
							Value="110" />
				</Style>

				<DataTemplate DataType="{x:Type b:PreparationViewModel}">
					<DockPanel HorizontalAlignment="Center"
							   VerticalAlignment="Center">
						<metro:ProgressRing Margin="12" />
						<TextBlock Text="{x:Static p:Resources.PreparationMode_Message}"
								   VerticalAlignment="Center"
								   Style="{DynamicResource NormalStyleKey}" />
					</DockPanel>
				</DataTemplate>

				<DataTemplate DataType="{x:Type b:ConfirmationViewModel}">
					<DockPanel LastChildFill="False">
						<TextBlock DockPanel.Dock="Top"
								   Text="{Binding Header}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Border DockPanel.Dock="Top"
								Style="{DynamicResource SeparatorStyleKey}" />
						<TextBlock DockPanel.Dock="Top"
								   Text="{Binding Message}"
								   TextWrapping="Wrap"
								   Style="{DynamicResource NormalStyleKey}" />

						<metro2:CallMethodButton DockPanel.Dock="Bottom"
												 Content="{Binding Button}"
												 MethodTarget="{Binding}"
												 MethodName="Click"
												 HorizontalAlignment="Right"
												 Style="{DynamicResource ButtonStyleKey}" />
					</DockPanel>
				</DataTemplate>

				<DataTemplate DataType="{x:Type b:ProgressViewModel}">
					<DockPanel HorizontalAlignment="Center"
							   VerticalAlignment="Center">
						<metro:ProgressRing Margin="12" />
						<TextBlock Text="{Binding Message}"
								   VerticalAlignment="Center"
								   Style="{DynamicResource NormalStyleKey}" />
					</DockPanel>
				</DataTemplate>

				<DataTemplate DataType="{x:Type b:CompletionViewModel}">
					<DockPanel LastChildFill="False">
						<TextBlock DockPanel.Dock="Top"
								   Text="{Binding Header}"
								   Style="{DynamicResource HeaderStyleKey}" />
						<Border DockPanel.Dock="Top"
								Style="{DynamicResource SeparatorStyleKey}" />
						<TextBlock DockPanel.Dock="Top"
								   Text="{Binding Message}"
								   TextWrapping="Wrap"
								   Style="{DynamicResource NormalStyleKey}" />

						<metro2:CallMethodButton DockPanel.Dock="Bottom"
												 Content="{Binding Button}"
												 MethodTarget="{Binding}"
												 MethodName="Click"
												 HorizontalAlignment="Right"
												 Style="{DynamicResource ButtonStyleKey}" />
					</DockPanel>
				</DataTemplate>

				<DataTemplate DataType="{x:Type b:CancellationViewModel}">
					<DockPanel LastChildFill="False">
						<TextBlock DockPanel.Dock="Top"
								   Text="{x:Static p:Resources.InstallCancellation}"
								   TextWrapping="Wrap"
								   Style="{DynamicResource NormalStyleKey}" />

						<StackPanel DockPanel.Dock="Bottom"
									Orientation="Horizontal"
									HorizontalAlignment="Right"
									IsEnabled="{Binding CanClick}">
							<metro2:CallMethodButton Content="{x:Static p:Resources.Yes}"
													 MethodTarget="{Binding}"
													 MethodName="PerformCancellation"
													 Style="{DynamicResource ButtonStyleKey}" />
							<Border Width="12" />
							<metro2:CallMethodButton Content="{x:Static p:Resources.No}"
													 MethodTarget="{Binding}"
													 MethodName="CancelCancellation"
													 Style="{DynamicResource ButtonStyleKey}" />
						</StackPanel>
					</DockPanel>
				</DataTemplate>
			</ContentControl.Resources>

			<ContentControl.RenderTransform>
				<TransformGroup>
					<ScaleTransform />
					<SkewTransform />
					<RotateTransform />
					<TranslateTransform />
				</TransformGroup>
			</ContentControl.RenderTransform>
		</ContentControl>
	</DockPanel>
</metro:MetroWindow>
