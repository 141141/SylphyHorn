<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ output extension=".wxs" #>
<#
    const string application = "SylphyHorn.exe";
    const string relativePath = @"..\..\SylphyHorn\bin\Release";

    var targets = Array.Empty<FileInfo>();
    var currentDir = new DirectoryInfo(Path.GetDirectoryName(Host.ResolvePath("Product.tt")));
    if (currentDir.Exists)
    {
        var releaseDir = new DirectoryInfo(Path.GetFullPath(Path.Combine(currentDir.FullName, relativePath)));
        if (releaseDir.Exists)
        {
            targets = releaseDir.GetFiles("*", SearchOption.AllDirectories)
                .Where(x => x.Extension == ".exe" || x.Extension == ".dll")
                .Where(x => !x.Name.Contains("vshost"))
                .ToArray();
        }
    }
#>
<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs"
     xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">
  <!--<?define ProductName="!(bind.assemblyName.SylphyHorn.exe)" ?>-->
  <!--<?define ProductVersion="!(bind.assemblyVersion.SylphyHorn.exe)" ?>-->
  <?define ProductName="SylphyHorn Engine" ?>
  <?define ProductVersion="!(bind.fileVersion.<#= application #>)" ?>
  <?define ProductCode="*" ?>
  <?define Manufacturer="grabacr.net" ?>
  <?define UpgradeCode="6d47ec2b-26ca-4a61-8a58-ae0f77714d7d" ?>
  <?define SourceDir = "<#= relativePath #>" ?>

  <Product Id="$(var.ProductCode)"
           Name="$(var.ProductName)"
           Language="1033"
           Version="$(var.ProductVersion)"
           Manufacturer="$(var.Manufacturer)"
           UpgradeCode="$(var.UpgradeCode)">

    <Package InstallerVersion="100"
             Compressed="yes"
             InstallScope="perUser" />

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
    <MediaTemplate />
    
    <Feature Id="ProductFeature"
             Title="SylphyHorn.Setup"
             Level="1">
      <ComponentGroupRef Id="SylphyHornComponents" />
      <ComponentRef Id="AppData.InstallTargetFolder" />
    </Feature>
    
    <Icon Id="ProductIcon"
          SourceFile="$(var.SourceDir)\\<#= application #>" />

    <Directory Id="TARGETDIR"
               Name="SourceDir">
      <Directory Id="AppDataFolder">
        <Directory Id="AppData.ManufacturerFolder"
                   Name="$(var.Manufacturer)">
          <Directory Id="INSTALLDIR"
                     Name="$(var.ProductName)">
            <Component Id="AppData.InstallTargetFolder"
                       Guid="A98F754C-2D59-43EB-8A41-D0EA0FAD94D3">
              <RemoveFolder Id='INSTALLDIR'
                            Directory='INSTALLDIR'
                            On='uninstall' />
              <RemoveFolder Id='AppData.ManufacturerFolder'
                            Directory='AppData.ManufacturerFolder'
                            On='uninstall' />
            </Component>
          </Directory>
        </Directory>
      </Directory>

      <Directory Id="StartupFolder" />
      <Directory Id="ProgramMenuFolder" />
    </Directory>
  </Product>

  <Fragment>
    <ComponentGroup Id="SylphyHornComponents"
                    Directory="INSTALLDIR">  
<#
    foreach (var file in targets)
    {	
        if (string.Equals(file.Name, application, StringComparison.InvariantCultureIgnoreCase))
        {
#>
      <Component Id="<#= file.Name #>"
                 Guid="*"
                 DiskId='1'>
        <File Id="<#= file.Name #>"
              Name="<#= file.Name #>"
              Source="$(var.SourceDir)\\<#= file.Name #>"
              KeyPath='yes'>
          <Shortcut Id="<#= file.Name #>.Startup"
                    Name="$(var.ProductName)"
                    Directory="StartupFolder"
                    WorkingDirectory='INSTALLDIR'
                    Icon="ProductIcon" />
          <Shortcut Id="<#= file.Name #>.ProgramMenu"
                    Name="$(var.ProductName)"
                    Directory="ProgramMenuFolder"
                    WorkingDirectory='INSTALLDIR'
                    Icon="ProductIcon" />
        </File>
      </Component>
<#
        }
        else
        {
#>
      <Component Id="<#= file.Name #>"
                 Guid="*"
                 DiskId='1'>
        <File Id="<#= file.Name #>"
              Name="<#= file.Name #>"
              Source="$(var.SourceDir)\\<#= file.Name #>"
              KeyPath='yes' />
      </Component>
<#
        }
    }
#>
    </ComponentGroup>
  </Fragment>
</Wix>
