<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Runtime.InteropServices" #>
<#@ import namespace="System.Text" #>
<#@ output extension=".wxs" #>
<#
    const string relativePath = @"..\SylphyHorn.Bootstrapper.UI\bin\Release";
    var targets = Array.Empty<FileInfo>();
    var currentDir = new DirectoryInfo(Path.GetDirectoryName(Host.ResolvePath("Bundle.tt")));
    var appRootDir = Path.GetFullPath(Path.Combine(currentDir.FullName, relativePath));
    if (currentDir.Exists)
    {
        var releaseDir = new DirectoryInfo(appRootDir);
        if (releaseDir.Exists)
        {
            targets = releaseDir.GetFiles("*", SearchOption.AllDirectories)
                .Where(x => x.Extension == ".dll")
                .Where(x => !x.Name.Contains("vshost"))
                .ToArray();
        }
    }
#>
<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs"
     xmlns:bal="http://wixtoolset.org/schemas/v4/wxs/bal"
     xmlns:util="http://wixtoolset.org/schemas/v4/wxs/util">
  <?define ProductName="SylphyHorn Engine" ?>
  <?define ProductVersion="1.0.0" ?>
  <?define ProductCode="*" ?>
  <?define Manufacturer="grabacr.net" ?>
  <?define UpgradeCode="85d1b40d-719c-4116-8118-a304e1a2b293" ?>

  <?define SourceDir = "..\..\SylphyHorn\bin\Release" ?>
  <?define MsiSource = "..\SylphyHorn.Installer\bin\Release\SylphyHorn.Installer.msi" ?>
  <?define BootstrapperSource = "..\SylphyHorn.Bootstrapper.UI\bin\Release" ?>

  <Bundle Name="$(var.ProductName)"
          Version="$(var.ProductVersion)"
          Manufacturer="$(var.Manufacturer)"
          UpgradeCode="$(var.UpgradeCode)">
    <BootstrapperApplicationRef Id="ManagedBootstrapperApplicationHost">
      <Payload SourceFile="$(var.BootstrapperSource)\BootstrapperCore.config "/>
<#
    foreach (var file in targets)
    {
        var sb = new StringBuilder(260);
        if (PathRelativePathTo(sb, appRootDir, FileAttributes.Directory, file.FullName, FileAttributes.Normal))
        {
            var path = sb.ToString(2, sb.Length - 2);
#>
      <Payload Name="<#= path #>"
               SourceFile="$(var.BootstrapperSource)\\<#= path #>" />
<#
        }
    }
#>
    </BootstrapperApplicationRef>

    <Chain>
      <PackageGroupRef Id="NetFx46Web" />

      <MsiPackage Id="SylphyHornMsiPackage"
                  SourceFile="$(var.MsiSource)"
                  Visible="no"
                  DisplayInternalUI="no" 
                  bal:PrereqPackage="yes" />
      <!-- see also: http://wixtoolset.org/development/wips/4161-allow-more-than-one-mbaprereq/ -->
    </Chain>
  </Bundle>

  <!--
  <Fragment>
    <WixVariable Id="WixMbaPrereqPackageId"
                 Value="Netfx4Full" />
    <WixVariable Id="WixMbaPrereqLicenseUrl"
                 Value="NetfxLicense.rtf" />

    <util:RegistrySearch Root="HKLM"
                         Key="SOFTWARE\Microsoft\Net Framework Setup\NDP\v4\Full"
                         Value="Version"
                         Variable="Netfx4FullVersion" />
    <util:RegistrySearch Root="HKLM"
                         Key="SOFTWARE\Microsoft\Net Framework Setup\NDP\v4\Full"
                         Value="Version"
                         Variable="Netfx4x64FullVersion"
                         Win64="yes" />

    <PackageGroup Id="Netfx4Full">
      <ExePackage Id="Netfx4Full"
                  Cache="no"
                  Compressed="no"
                  PerMachine="yes"
                  Permanent="yes"
                  Vital="yes"
                  SourceFile="dotNetFx40_Full_x86_x64.exe"
                  DownloadUrl="http://go.microsoft.com/fwlink/?LinkId=164193"
                  DetectCondition="Netfx4FullVersion AND (NOT VersionNT64 OR Netfx4x64FullVersion)" />
    </PackageGroup>
  </Fragment>
  -->
</Wix>

<#+
[DllImport("shlwapi.dll", CharSet = CharSet.Auto)]
private static extern bool PathRelativePathTo(
     [Out] StringBuilder pszPath,
     [In] string pszFrom,
     [In] System.IO.FileAttributes dwAttrFrom,
     [In] string pszTo,
     [In] System.IO.FileAttributes dwAttrTo);
#>